class Solution {
    public boolean areSentencesSimilarTwo(String[] words1, String[] words2, String[][] pairs) {
        Map<String, String> map = new HashMap<>();
        for(String[] pair: pairs){
            if(!map.containsKey(pair[0]))
                map.put(pair[0], pair[0]);
            if(!map.containsKey(pair[1]))
                map.put(pair[1], pair[1]);
            union(pair[0], pair[1], map);
        }
        //System.out.print(map);
        if(words1.length!=words2.length)
            return false;
        for(int i=0; i<words1.length; i++){
            if(!words1[i].equals(words2[i]) ){
                if(!map.containsKey(words1[i])||!map.containsKey(words2[i]))
                    return false;
                String p1 = find(words1[i], map), p2 = find(words2[i], map);
                System.out.print(p1+" "+p2);
                if(!p1.equals(p2))
                    return false;
            }
            
        }
        return true;
    }
    public String find(String s, Map<String, String> map){
        /**
        if(!map.containsKey(s))
            return "";**/
        String p = map.get(s);
        if(!p.equals(s)){
            //s = p;
            map.put(s, find(p, map));
        }
        return map.get(s);
    }
    public void union(String s1, String s2, Map<String, String> map){
        String p1 = find(s1, map), p2 = find(s2, map);
        if(!p1.equals(p2)){
            map.put(p1, p2);
        }
    }
}
